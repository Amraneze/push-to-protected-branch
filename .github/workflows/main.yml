name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  build:
    name: Build docker image
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9.0]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64

    - name: Install Peotry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -

    - name: Add Peotry to PATH
      shell: bash
      run: |
        source $HOME/.poetry/env
        echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

    - name: set PY
      run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV

    - uses: actions/cache@v1
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}

    - name: Install dependencies
      run: poetry install

    - name: Lint Code
      run: |
        poetry run black --check . --experimental-string-processing
        poetry run flake8 push-to-protected-branch

    - name: Code Typing
      run: poetry run mypy --config-file mypy.ini .

    - name: Dependencies security check
      run: poetry run skjold -v audit poetry.lock.backup

    - name: Build Docker image
      run: docker build -t push-to-protected-branch:${{ github.sha }} .

    - name: Bump version
      run: poetry run bump2version minor

  release:
    name: Release
    needs: [analyze, build]
    runs-on: ubuntu-latest

    steps:
    - uses: release-drafter/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
